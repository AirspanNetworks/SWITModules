/*  -*- java -*- ****************************************************************** * * Module  : DCC - Device Controller Client in Java for Sequans devices * * Purpose : THIS FILE IS AUTOMATICALLY GENERATED ! * ***************************************************************** * *  Copyright (c) 2009 SEQUANS Communications. *  All rights reserved. *   *  This is confidential and proprietary source code of SEQUANS *  Communications. The use of the present source code and all *  its derived forms is exclusively governed by the restricted *  terms and conditions set forth in the SEQUANS *  Communications' EARLY ADOPTER AGREEMENT and/or LICENCE *  AGREEMENT. The present source code and all its derived *  forms can ONLY and EXCLUSIVELY be used with SEQUANS *  Communications' products. The distribution/sale of the *  present source code and all its derived forms is EXCLUSIVELY *  RESERVED to regular LICENCE holder and otherwise STRICTLY *  PROHIBITED. * ***************************************************************** */package DMTool;public class Rftb {	public static void RftbInitialize(final RftbClient c) {		agscRftbImpl ai = new agscRftbImpl();		ai.initialize(c);	}	public static int DumpRegs(final short useCached, OutValue<Integer> status, OutArray<Integer> buffer) {		return agscRftbImpl.DumpRegs( useCached, status, buffer);	}	public static int SetReg(final int reg, final int value, final int mask, OutValue<Integer> status) {		return agscRftbImpl.SetReg( reg, value, mask, status);	}	public static int GetTemp(OutValue<Integer> status, OutValue<Integer> temperature) {		return agscRftbImpl.GetTemp( status, temperature);	}	public static int SendArc(final String b64Code, OutValue<Integer> status) {		return agscRftbImpl.SendArc( b64Code, status);	}}