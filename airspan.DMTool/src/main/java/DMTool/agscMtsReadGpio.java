/*  -*- java -*- ****************************************************************** * * Module  : DCC - Device Controller Client in Java for Sequans devices * * Purpose : THIS FILE IS AUTOMATICALLY GENERATED ! * ***************************************************************** * *  Copyright (c) 2009 SEQUANS Communications. *  All rights reserved. *   *  This is confidential and proprietary source code of SEQUANS *  Communications. The use of the present source code and all *  its derived forms is exclusively governed by the restricted *  terms and conditions set forth in the SEQUANS *  Communications' EARLY ADOPTER AGREEMENT and/or LICENCE *  AGREEMENT. The present source code and all its derived *  forms can ONLY and EXCLUSIVELY be used with SEQUANS *  Communications' products. The distribution/sale of the *  present source code and all its derived forms is EXCLUSIVELY *  RESERVED to regular LICENCE holder and otherwise STRICTLY *  PROHIBITED. * ***************************************************************** */package DMTool;class agscMtsReadGpio {	public static int _id = -1;	public static final String _name = "ReadGpio";	public static int marshall(byte[] buf, int maxSz, OutValue<Integer> _offset, final long[] select, boolean forceInput) {		int st = Status.STATUS_OK;		// selectQty		Util.Copy32ToBuffer(buf, select.length, _offset);		// selectArray		for (int i = 0; i<select.length; i++) {			Util.Copy32ToBuffer(buf, select[i], _offset);		}		// forceInput		Util.Copy32ToBuffer(buf, forceInput, _offset);		return st;	}	public static int unmarshall(final byte[] buf, int maxSz, OutValue<Integer> _offset, OutArray<sqnMtsGpioState> states) {		int st = Status.STATUS_OK;		// Array		{			// statesQty			int arrSize = (int) Util.Copy32FromBuffer(buf, _offset);			// statesArray			states._array = new sqnMtsGpioState[arrSize];			for (int i = 0; i<states._array.length; i++) {				states._array[i] = new sqnMtsGpioState();			}			for (int i = 0; i<states._array.length; i++) {				if ( Status.STATUS_OK != (st = sqnMtsGpioState.unmarshall(buf, states._array[i], _offset)) ) return st;			}		}		return st;	}}