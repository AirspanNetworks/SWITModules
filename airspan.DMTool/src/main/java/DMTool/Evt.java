/*  -*- java -*- ****************************************************************** * * Module  : DCC - Device Controller Client in Java for Sequans devices * * Purpose : THIS FILE IS AUTOMATICALLY GENERATED ! * ***************************************************************** * *  Copyright (c) 2009 SEQUANS Communications. *  All rights reserved. *   *  This is confidential and proprietary source code of SEQUANS *  Communications. The use of the present source code and all *  its derived forms is exclusively governed by the restricted *  terms and conditions set forth in the SEQUANS *  Communications' EARLY ADOPTER AGREEMENT and/or LICENCE *  AGREEMENT. The present source code and all its derived *  forms can ONLY and EXCLUSIVELY be used with SEQUANS *  Communications' products. The distribution/sale of the *  present source code and all its derived forms is EXCLUSIVELY *  RESERVED to regular LICENCE holder and otherwise STRICTLY *  PROHIBITED. * ***************************************************************** */package DMTool;public class Evt {		agscEvtImpl ai;		public void EvtInitialize(final EvtClient c) {		ai = new agscEvtImpl();		ai.initialize(c);	}	public int GetEvtList(OutArray<EventDesc> evtDesc) {		return agscEvtImpl.GetEvtList( evtDesc);	}	public int GetDecodingInfo(OutValue<Long> dateUnitNs, OutValue<Long> endianMagic) {		return agscEvtImpl.GetDecodingInfo( dateUnitNs, endianMagic);	}	public int SetEnable(final int[] eventIdx, boolean enable) {		return agscEvtImpl.SetEnable( eventIdx, enable);	}	public int DisableAll() {		return agscEvtImpl.DisableAll();	}	public int GetEvtDescrImage(int offset, OutArray<Short> image) {		return agscEvtImpl.GetEvtDescrImage( offset, image);	}	public int GetEvtCount(OutArray<sqnEvtStats> evtStats) {		return agscEvtImpl.GetEvtCount( evtStats);	}		public void RemoveListener() {		ai.remove();	}}