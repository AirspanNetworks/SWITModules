/*  -*- java -*- ****************************************************************** * * Module  : DCC - Device Controller Client in Java for Sequans devices * * Purpose : THIS FILE IS AUTOMATICALLY GENERATED ! * ***************************************************************** * *  Copyright (c) 2009 SEQUANS Communications. *  All rights reserved. *   *  This is confidential and proprietary source code of SEQUANS *  Communications. The use of the present source code and all *  its derived forms is exclusively governed by the restricted *  terms and conditions set forth in the SEQUANS *  Communications' EARLY ADOPTER AGREEMENT and/or LICENCE *  AGREEMENT. The present source code and all its derived *  forms can ONLY and EXCLUSIVELY be used with SEQUANS *  Communications' products. The distribution/sale of the *  present source code and all its derived forms is EXCLUSIVELY *  RESERVED to regular LICENCE holder and otherwise STRICTLY *  PROHIBITED. * ***************************************************************** */package DMTool;public class sqnCgiInfo {	public long id1;	public long id2;	public long id3;	public long id4;	public long id5;	public long id6;	public sqnCgiInfo() {		// Initialization	}	public static int marshall(byte[] buf, final sqnCgiInfo p, OutValue<Integer> _offset) {		int st = Status.STATUS_OK;		// Check the size of the fundamental types of the structure		if (buf.length < (_offset._value+24)) return DccError.ERR_OVERFLOW;		// id1		Util.Copy32ToBuffer(buf, p.id1, _offset);		// id2		Util.Copy32ToBuffer(buf, p.id2, _offset);		// id3		Util.Copy32ToBuffer(buf, p.id3, _offset);		// id4		Util.Copy32ToBuffer(buf, p.id4, _offset);		// id5		Util.Copy32ToBuffer(buf, p.id5, _offset);		// id6		Util.Copy32ToBuffer(buf, p.id6, _offset);		return st;	}	public static int unmarshall(final byte[] buf, sqnCgiInfo p, OutValue<Integer> _offset) {		int st = Status.STATUS_OK;		// Check the size of the fundamental types of the structure		if (buf.length < (_offset._value+24)) return DccError.ERR_OVERFLOW;		// id1		p.id1 = (long) Util.Copy32FromBuffer(buf, _offset);		// id2		p.id2 = (long) Util.Copy32FromBuffer(buf, _offset);		// id3		p.id3 = (long) Util.Copy32FromBuffer(buf, _offset);		// id4		p.id4 = (long) Util.Copy32FromBuffer(buf, _offset);		// id5		p.id5 = (long) Util.Copy32FromBuffer(buf, _offset);		// id6		p.id6 = (long) Util.Copy32FromBuffer(buf, _offset);		return st;	}}