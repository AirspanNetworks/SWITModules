/*  -*- java -*- ****************************************************************** * * Module  : DCC - Device Controller Client in Java for Sequans devices * * Purpose : THIS FILE IS AUTOMATICALLY GENERATED ! * ***************************************************************** * *  Copyright (c) 2009 SEQUANS Communications. *  All rights reserved. *   *  This is confidential and proprietary source code of SEQUANS *  Communications. The use of the present source code and all *  its derived forms is exclusively governed by the restricted *  terms and conditions set forth in the SEQUANS *  Communications' EARLY ADOPTER AGREEMENT and/or LICENCE *  AGREEMENT. The present source code and all its derived *  forms can ONLY and EXCLUSIVELY be used with SEQUANS *  Communications' products. The distribution/sale of the *  present source code and all its derived forms is EXCLUSIVELY *  RESERVED to regular LICENCE holder and otherwise STRICTLY *  PROHIBITED. * ***************************************************************** */package DMTool;public class SmsErrorCauseTag {	public int value;	public static final int SMS_CAUSE_UNASSIGNED_NUMBER = 1;	public static final int SMS_RP_OPERATOR_DETERMINED_BARRING = 8;	public static final int SMS_CAUSE_CALL_BARRED = 10;	public static final int SMS_CAUSE_RESERVED = 11;	public static final int SMS_CAUSE_NETWORK_FAILURE = 17;	public static final int SMS_CAUSE_SHORT_MESSAGE_TRANSFER_REJECTED = 21;	public static final int SMS_CAUSE_MEMORY_CAPACITY_EXCEEDED = 22;	public static final int SMS_CAUSE_DESTINATION_OUT_OF_ORDER = 27;	public static final int SMS_CAUSE_UNIDENTIFIED_SUBSCRIBER = 28;	public static final int SMS_CAUSE_FACILITY_REJECTED = 29;	public static final int SMS_CAUSE_UNKNOWN_SUBSCRIBER = 30;	public static final int SMS_CAUSE_NETWORK_OUT_OF_ORDER = 38;	public static final int SMS_CAUSE_TEMPORARY_FAILURE = 41;	public static final int SMS_CAUSE_CONGESTION = 42;	public static final int SMS_CAUSE_RESOURCE_UNAVAILABLE_UNSPECIFIED = 47;	public static final int SMS_CAUSE_REQUESTED_FACILITY_NOT_SUBSCRIBED = 50;	public static final int SMS_CAUSE_REQUESTED_FACILITY_NOT_IMPLEMENTED = 69;	public static final int SMS_CAUSE_INVALID_SHORT_MESSAGE_TRANSFER_REFERENCE_VALUE = 81;	public static final int SMS_CAUSE_SEMANTICALLY_INCORRECT_MESSAGE = 95;	public static final int SMS_CAUSE_INVALID_MANDATORY_INFORMATION = 96;	public static final int SMS_CAUSE_MESSAGE_TYPE_NOT_EXISTENT_OR_NOT_IMPLEMENTED = 97;	public static final int SMS_CAUSE_MESSAGE_TYPE_NOT_COMPATIBLE_WITH_PROTOCOL_STATE = 98;	public static final int SMS_CAUSE_IE_NOT_EXISTENT_OR_NOT_IMPLEMENTED = 99;	public static final int SMS_CAUSE_PROTOCOL_ERROR_UNSPECIFIED = 111;	public static final int SMS_CAUSE_INTERWORKING_UNSPECIFIED = 127;	public static final int SMS_CAUSE_NW_ERROR_MAX = 128;	public static final int SMS_CONTEXT_BUSY = 129;	public static final int SMS_TX_FAILURE = 130;	public static final int SMS_CAUSE_MAX = 131;	public static int marshall(byte[] buf, final SmsErrorCauseTag p, OutValue<Integer> _offset) {		// Check the size of the buffer		if (buf.length < (_offset._value+4)) return DccError.ERR_OVERFLOW;		Util.Copy32ToBuffer(buf, p.value, _offset);		return Status.STATUS_OK;	}	public static int unmarshall(final byte[] buf, SmsErrorCauseTag p, OutValue<Integer> _offset) {		// Check the size of the buffer		if (buf.length < (_offset._value+4)) return DccError.ERR_OVERFLOW;		p.value = (int) Util.Copy32FromBuffer(buf, _offset);		return Status.STATUS_OK;	}}