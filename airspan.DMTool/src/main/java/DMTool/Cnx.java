/*  -*- java -*- ****************************************************************** * * Module  : DCC - Device Controller Client in Java for Sequans devices * * Purpose : THIS FILE IS AUTOMATICALLY GENERATED ! * ***************************************************************** * *  Copyright (c) 2009 SEQUANS Communications. *  All rights reserved. *   *  This is confidential and proprietary source code of SEQUANS *  Communications. The use of the present source code and all *  its derived forms is exclusively governed by the restricted *  terms and conditions set forth in the SEQUANS *  Communications' EARLY ADOPTER AGREEMENT and/or LICENCE *  AGREEMENT. The present source code and all its derived *  forms can ONLY and EXCLUSIVELY be used with SEQUANS *  Communications' products. The distribution/sale of the *  present source code and all its derived forms is EXCLUSIVELY *  RESERVED to regular LICENCE holder and otherwise STRICTLY *  PROHIBITED. * ***************************************************************** */package DMTool;public class Cnx {	public static void CnxInitialize(final CnxClient c) {		agscCnxImpl ai = new agscCnxImpl();		ai.initialize(c);	}	public static int SetUeStarted(final boolean isStarted, OutValue<Integer> status) {		return agscCnxImpl.SetUeStarted( isStarted, status);	}	public static int GetUeStarted(OutValue<Boolean> isStarted) {		return agscCnxImpl.GetUeStarted( isStarted);	}	public static int GetLinkSpeed(OutValue<Integer> ulBitRate, OutValue<Integer> dlBitRate) {		return agscCnxImpl.GetLinkSpeed( ulBitRate, dlBitRate);	}	public static int GetPhyStatsDl(OutValue<PhyStatsDl> phyStatsDl) {		return agscCnxImpl.GetPhyStatsDl( phyStatsDl);	}	public static int GetUeState(OutValue<sqnThpMcState> state) {		return agscCnxImpl.GetUeState( state);	}}