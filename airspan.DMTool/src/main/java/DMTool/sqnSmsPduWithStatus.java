/*  -*- java -*- ****************************************************************** * * Module  : DCC - Device Controller Client in Java for Sequans devices * * Purpose : THIS FILE IS AUTOMATICALLY GENERATED ! * ***************************************************************** * *  Copyright (c) 2009 SEQUANS Communications. *  All rights reserved. *   *  This is confidential and proprietary source code of SEQUANS *  Communications. The use of the present source code and all *  its derived forms is exclusively governed by the restricted *  terms and conditions set forth in the SEQUANS *  Communications' EARLY ADOPTER AGREEMENT and/or LICENCE *  AGREEMENT. The present source code and all its derived *  forms can ONLY and EXCLUSIVELY be used with SEQUANS *  Communications' products. The distribution/sale of the *  present source code and all its derived forms is EXCLUSIVELY *  RESERVED to regular LICENCE holder and otherwise STRICTLY *  PROHIBITED. * ***************************************************************** */package DMTool;public class sqnSmsPduWithStatus {	public sqnMbimSmsStatus status;	public short length;	public short[] value = new short[176];	public sqnSmsPduWithStatus() {		// Initialization		// status		status = new sqnMbimSmsStatus();	}	public static int marshall(byte[] buf, final sqnSmsPduWithStatus p, OutValue<Integer> _offset) {		int st = Status.STATUS_OK;		// Check the size of the fundamental types of the structure		if (buf.length < (_offset._value+5)) return DccError.ERR_OVERFLOW;		// status		if ( Status.STATUS_OK != (st = sqnMbimSmsStatus.marshall(buf, p.status, _offset)) ) return st;		// length		Util.Copy8ToBuffer(buf, p.length, _offset);		// value		for (int i = 0; i<176; i++) {			Util.Copy8ToBuffer(buf, p.value[i], _offset);		}		return st;	}	public static int unmarshall(final byte[] buf, sqnSmsPduWithStatus p, OutValue<Integer> _offset) {		int st = Status.STATUS_OK;		// Check the size of the fundamental types of the structure		if (buf.length < (_offset._value+5)) return DccError.ERR_OVERFLOW;		// status		if ( Status.STATUS_OK != (st = sqnMbimSmsStatus.unmarshall(buf, p.status, _offset)) ) return st;		// length		p.length = (short) Util.Copy8FromBuffer(buf, _offset);		// value		for (int i = 0; i<176; i++) {			p.value[i] = (short) Util.Copy8FromBuffer(buf, _offset);		}		return st;	}}