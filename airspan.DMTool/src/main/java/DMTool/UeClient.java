/*  -*- java -*- ****************************************************************** * * Module  : DCC - Device Controller Client in Java for Sequans devices * * Purpose : THIS FILE IS AUTOMATICALLY GENERATED ! * ***************************************************************** * *  Copyright (c) 2009 SEQUANS Communications. *  All rights reserved. *   *  This is confidential and proprietary source code of SEQUANS *  Communications. The use of the present source code and all *  its derived forms is exclusively governed by the restricted *  terms and conditions set forth in the SEQUANS *  Communications' EARLY ADOPTER AGREEMENT and/or LICENCE *  AGREEMENT. The present source code and all its derived *  forms can ONLY and EXCLUSIVELY be used with SEQUANS *  Communications' products. The distribution/sale of the *  present source code and all its derived forms is EXCLUSIVELY *  RESERVED to regular LICENCE holder and otherwise STRICTLY *  PROHIBITED. * ***************************************************************** */package DMTool;public class UeClient {	public void PdnDisconnectRequest (final long cid, sqnPdnDisconnectReason reason) {return;}	public void DetachRequest (sqnDetachInitiator initiator) {return;}	public void AuthenticationRejectReceived () {return;}	public void EpsBearerReleased (short epsBearerId) {return;}	public void EpsBearerEstablished (final sqnEpsBearerInfo info) {return;}	public void EpsBearerModified (final sqnEpsBearerInfo info) {return;}	public void PlmnListUpdated (OutValue<EpsPlmnIdList> equivalentPlmnList, OutValue<EpsPlmnIdList> forbiddenPlmnList) {return;}	public void TrackingAreaIdListChanged (sqnTaiListType type, final EpsTaiList taiList) {return;}	public void EmmState (sqnEmmState state, sqnEmmSubState subState) {return;}	public void PlmnSelectionResponse (boolean isSuccess) {return;}	public void AvailablePlmnList (final sqnAvailablePlmnList plmnList) {return;}	public void AvailablePlmn (final sqnUserPlmnDescription[] plmn) {return;}	public void PdnEstablished (final sqnPdnConfig pdn) {return;}	public void PdnEstablishedExt (final sqnPdnConfigExt pdn) {return;}	public void RouterAdvertisementReceived (final sqnRouterAdvertisement routerAdv) {return;}	public void PdnRejected (long cid, EpsEsmCause esmCause, EpsEmmCause emmCause, long remainingThrottlingTime) {return;}	public void PdnReleased (final String apn, long cid) {return;}	public void PdnDisconnectRejectRcd (long cid, EpsEsmCause esmCause) {return;}	public void EpsNetworkRegistrationStatus (OutValue<sqnNetworkRegistrationInfo> networkRegistrationInfo) {return;}	public void SystemMode (sqnSystemMode systemMode, sqnSystemSubmode systemSubmode) {return;}	public void RemoteSimCommandReq (final String request, final boolean followOnReq) {return;}	public void SimResponse (final int status, final sqnSimCommandRsp cmdRsp) {return;}	public void CrsmResponse (final int status, short sw1, short sw2, final sqnSimCommandRsp cmdRsp) {return;}	public void PinStatus (sqnPinStatus pinStatus, short remainingAttempts) {return;}	public void SimPhysicalAccessNeeded (boolean isNeeded) {return;}	public void IccId (final String id) {return;}	public void RrcStateInfo (final sqnRrcStateInfo info) {return;}	public void CellScanReport (final sqnCellScanReport report) {return;}	public void CellMeasReport (final sqnCellMeasReport report) {return;}	public void PdcpEntityParamsChanged (final sqnPdcpEntityParams[] entity) {return;}	public void RbParamsChanged (final sqnRlcRbEntityParams[] entity) {return;}	public void LchEntityParamsChanged (final sqnMacLchEntityParams[] entity) {return;}}