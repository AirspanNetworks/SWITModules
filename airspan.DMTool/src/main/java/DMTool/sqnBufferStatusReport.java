/*  -*- java -*- ****************************************************************** * * Module  : DCC - Device Controller Client in Java for Sequans devices * * Purpose : THIS FILE IS AUTOMATICALLY GENERATED ! * ***************************************************************** * *  Copyright (c) 2009 SEQUANS Communications. *  All rights reserved. *   *  This is confidential and proprietary source code of SEQUANS *  Communications. The use of the present source code and all *  its derived forms is exclusively governed by the restricted *  terms and conditions set forth in the SEQUANS *  Communications' EARLY ADOPTER AGREEMENT and/or LICENCE *  AGREEMENT. The present source code and all its derived *  forms can ONLY and EXCLUSIVELY be used with SEQUANS *  Communications' products. The distribution/sale of the *  present source code and all its derived forms is EXCLUSIVELY *  RESERVED to regular LICENCE holder and otherwise STRICTLY *  PROHIBITED. * ***************************************************************** */package DMTool;public class sqnBufferStatusReport {	public short bsr0;	public short bsr1;	public short bsr2;	public short bsr3;	public short shortBsr;	public sqnBufferStatusReport() {		// Initialization	}	public static int marshall(byte[] buf, final sqnBufferStatusReport p, OutValue<Integer> _offset) {		int st = Status.STATUS_OK;		// Check the size of the fundamental types of the structure		if (buf.length < (_offset._value+5)) return DccError.ERR_OVERFLOW;		// bsr0		Util.Copy8ToBuffer(buf, p.bsr0, _offset);		// bsr1		Util.Copy8ToBuffer(buf, p.bsr1, _offset);		// bsr2		Util.Copy8ToBuffer(buf, p.bsr2, _offset);		// bsr3		Util.Copy8ToBuffer(buf, p.bsr3, _offset);		// shortBsr		Util.Copy8ToBuffer(buf, p.shortBsr, _offset);		return st;	}	public static int unmarshall(final byte[] buf, sqnBufferStatusReport p, OutValue<Integer> _offset) {		int st = Status.STATUS_OK;		// Check the size of the fundamental types of the structure		if (buf.length < (_offset._value+5)) return DccError.ERR_OVERFLOW;		// bsr0		p.bsr0 = (short) Util.Copy8FromBuffer(buf, _offset);		// bsr1		p.bsr1 = (short) Util.Copy8FromBuffer(buf, _offset);		// bsr2		p.bsr2 = (short) Util.Copy8FromBuffer(buf, _offset);		// bsr3		p.bsr3 = (short) Util.Copy8FromBuffer(buf, _offset);		// shortBsr		p.shortBsr = (short) Util.Copy8FromBuffer(buf, _offset);		return st;	}}