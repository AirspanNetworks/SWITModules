/*  -*- java -*- ****************************************************************** * * Module  : DCC - Device Controller Client in Java for Sequans devices * * Purpose : THIS FILE IS AUTOMATICALLY GENERATED ! * ***************************************************************** * *  Copyright (c) 2009 SEQUANS Communications. *  All rights reserved. *   *  This is confidential and proprietary source code of SEQUANS *  Communications. The use of the present source code and all *  its derived forms is exclusively governed by the restricted *  terms and conditions set forth in the SEQUANS *  Communications' EARLY ADOPTER AGREEMENT and/or LICENCE *  AGREEMENT. The present source code and all its derived *  forms can ONLY and EXCLUSIVELY be used with SEQUANS *  Communications' products. The distribution/sale of the *  present source code and all its derived forms is EXCLUSIVELY *  RESERVED to regular LICENCE holder and otherwise STRICTLY *  PROHIBITED. * ***************************************************************** */package DMTool;public class Has {	public static void HasInitialize(final HasClient c) {		agscHasImpl ai = new agscHasImpl();		ai.initialize(c);	}	public static int Open(final String pathname, long flags, OutValue<Integer> result) {		return agscHasImpl.Open( pathname, flags, result);	}	public static int Read(int fd, long count, long offset, OutValue<sqnHasErrors> rv, OutArray<Short> data) {		return agscHasImpl.Read( fd, count, offset, rv, data);	}	public static int Write(int fd, final short[] data, long offset, OutValue<sqnHasErrors> rv, OutValue<Long> written) {		return agscHasImpl.Write( fd, data, offset, rv, written);	}	public static int Close(int fd, OutValue<Integer> result) {		return agscHasImpl.Close( fd, result);	}}