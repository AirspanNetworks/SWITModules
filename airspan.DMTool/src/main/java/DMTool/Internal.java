/*  -*- java -*- ****************************************************************** * * Module  : DCC - Device Controller Client in Java for Sequans devices * * Purpose : THIS FILE IS AUTOMATICALLY GENERATED ! * ***************************************************************** * *  Copyright (c) 2009 SEQUANS Communications. *  All rights reserved. *   *  This is confidential and proprietary source code of SEQUANS *  Communications. The use of the present source code and all *  its derived forms is exclusively governed by the restricted *  terms and conditions set forth in the SEQUANS *  Communications' EARLY ADOPTER AGREEMENT and/or LICENCE *  AGREEMENT. The present source code and all its derived *  forms can ONLY and EXCLUSIVELY be used with SEQUANS *  Communications' products. The distribution/sale of the *  present source code and all its derived forms is EXCLUSIVELY *  RESERVED to regular LICENCE holder and otherwise STRICTLY *  PROHIBITED. * ***************************************************************** */package DMTool;public class Internal {	public static void InternalInitialize(final InternalClient c) {		agscInternalImpl ai = new agscInternalImpl();		ai.initialize(c);	}	public static int GetAvailableMs(OutArray<MsDescriptor> ms) {		return agscInternalImpl.GetAvailableMs( ms);	}	public static int GetDetectedDevices(OutArray<DeviceDescriptor> devices) {		return agscInternalImpl.GetDetectedDevices( devices);	}	public static int ConnectToMs(long mac, OutValue<Long> msHandle) {		return agscInternalImpl.ConnectToMs( mac, msHandle);	}	public static int RequestNtf(final NtfName[] ntf) {		return agscInternalImpl.RequestNtf( ntf);	}	public static int GetDriverVersions(OutValue<String> serviceLayer, OutValue<String> kernelLayer) {		return agscInternalImpl.GetDriverVersions( serviceLayer, kernelLayer);	}	public static int SetPersistentSsState(boolean state) {		return agscInternalImpl.SetPersistentSsState( state);	}}