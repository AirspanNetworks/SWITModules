/*  -*- java -*- ****************************************************************** * * Module  : DCC - Device Controller Client in Java for Sequans devices * * Purpose : THIS FILE IS AUTOMATICALLY GENERATED ! * ***************************************************************** * *  Copyright (c) 2009 SEQUANS Communications. *  All rights reserved. *   *  This is confidential and proprietary source code of SEQUANS *  Communications. The use of the present source code and all *  its derived forms is exclusively governed by the restricted *  terms and conditions set forth in the SEQUANS *  Communications' EARLY ADOPTER AGREEMENT and/or LICENCE *  AGREEMENT. The present source code and all its derived *  forms can ONLY and EXCLUSIVELY be used with SEQUANS *  Communications' products. The distribution/sale of the *  present source code and all its derived forms is EXCLUSIVELY *  RESERVED to regular LICENCE holder and otherwise STRICTLY *  PROHIBITED. * ***************************************************************** */package DMTool;public class PlaDbg {	public static void PlaDbgInitialize(final PlaDbgClient c) {		agscPlaDbgImpl ai = new agscPlaDbgImpl();		ai.initialize(c);	}	public static int DumpMem(long baseAddr, long nunits, long width, OutArray<String> buffer) {		return agscPlaDbgImpl.DumpMem( baseAddr, nunits, width, buffer);	}	public static int ModifyMem(long baseAddr, long data, long nunits, OutValue<Integer> status) {		return agscPlaDbgImpl.ModifyMem( baseAddr, data, nunits, status);	}	public static int ShowStack(long taskId, OutArray<String> buffer) {		return agscPlaDbgImpl.ShowStack( taskId, buffer);	}	public static int ShowAllStack(OutArray<String> buffer) {		return agscPlaDbgImpl.ShowAllStack( buffer);	}	public static int KInfo(OutArray<String> buffer) {		return agscPlaDbgImpl.KInfo( buffer);	}}